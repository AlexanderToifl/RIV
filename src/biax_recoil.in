### Main Simulation - RIV          ###
### Alexander Toifl 	- E1228803 ###
### Christian Schleich 	- E1325958 ###

#Load a-Si sample
read_data amorph.dat

variable temp_lower equal 300.
variable temp_upper equal 400.
variable massvar 	equal 28.09
variable unit_cell 	equal 4
variable eng_cell_k	equal 25		#Atoms per eV

variable i loop 20
variable ekin equal 500							#eV
variable vel equal "(2*v_ekin/v_massvar)^(1./2.)"
variable v0 equal ${vel}
print "Velocity v: ${v0}"

variable cell_size	equal "floor((((v_ekin*v_eng_cell_k)/8.)^(1./3.)) + v_unit_cell) + 1"
print "Cell_size a: ${cell_size}"

variable tmp equal "lx"
variable L0 equal ${tmp}
print "Initial Length, L0: ${L0}"

neighbor 		0.3 bin
neigh_modify	delay 1

#use Tersoff Potential
mass			1 ${massvar}
pair_style		tersoff
pair_coeff		* * Si.tersoff Si

reset_timestep 0
timestep		0.001
fix 			1 all nve

thermo_style custom step lx ly lz press pxx pyy pzz pe atoms temp 
thermo			100
thermo_modify	lost ignore flush yes

#Equilibration
run 4000


####################### Recoil Insertion ###############################
variable tmp2 equal "atoms"

#Start loop

label loop
dump 1 all atom 100 testfile.$i

### Calculate velocity components (finally working but far from elegant)

variable vx equal random(0,${vel},5974)
variable v1 equal ${vx}
variable vtemp1 equal "(v_v0^2 - v_v1^2)^(1./2.)"
variable vy equal random(0,${vtemp1},8795)
variable v2 equal ${vy}
variable vz equal "(v_v0^2 - v_v1^2 - v_v2^2)^(1./2.)"
print "Velocity vx: ${v1}"
print "Velocity vy: ${v2}"
print "Velocity vz: ${vz}"

#choose random atom 
variable rn_id equal floor(random(0,${tmp2},30491))
print "Random id: ${rn_id}"

#define group that contains the chosen atom
group ${i} id ${rn_id}
velocity ${i} set ${v1} ${v2} ${vz}
#velocity matoms scale 100 <-- does not work

run 4000

undump 1
next i
jump vrc.in loop


################### Biaxial deformation ################################
variable deform_scale equal 0.9

#deform in x direction

fix		3 all deform 1 x scale ${deform_scale} remap x

variable strainx equal "(lx - v_L0)/v_L0"
variable strainy equal "(ly - v_L0)/v_L0"
variable p1 equal "v_strainx"
variable p2 equal "v_strainy"
variable p3 equal "-pxx/10000"
variable p4 equal "-pyy/10000"
variable p5 equal "-pzz/10000"
fix def1 all print 100 "${p1} ${p2} ${p3} ${p4} ${p5}" file deformation.txt screen no


run 1000
unfix 3

#deform in y direction

fix		3 all deform 1 y scale ${deform_scale} remap x

run 1000
unfix 3

run 5000

